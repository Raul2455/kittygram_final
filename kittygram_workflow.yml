name: Main kittygram workflow

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Copy docker-compose.yml via ssh
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        source: "docker-compose.production.yml"
        target: "kittygram"

    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          set -e
          cd kittygram
          
          echo "Pulling images..."
          sudo docker compose -f docker-compose.production.yml pull || echo "Failed to pull images"

          echo "Stopping old services..."
          sudo docker compose -f docker-compose.production.yml down || echo "Failed to stop services"

          echo "Starting new services..."
          sudo docker compose -f docker-compose.production.yml up -d || echo "Failed to start services"

          echo "Checking backend logs..."
          sudo docker logs kittygram-backend-1 || echo "Failed to get logs"

          echo "Running migrations..."
          sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate || echo "Migration failed"

          echo "Collecting static files..."
          sudo docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic --noinput || echo "Collectstatic failed"

    - name: Get backend logs
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          echo "Fetching backend logs..."
          sudo docker logs kittygram-backend-1 || echo "Failed to get backend logs"

    - name: Check backend container status
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          echo "Checking container status..."
          sudo docker ps -a
          if [ $(sudo docker inspect -f '{{.State.Running}}' kittygram-backend-1) == "false" ]; then
            echo "Backend service failed to start. Fetching logs..."
            sudo docker logs kittygram-backend-1
            exit 1
          fi
          
    - name: List running containers and their status
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          echo "Listing containers..."
          sudo docker ps -a
          sudo docker-compose -f docker-compose.production.yml ps

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          Деплой выполнен! Проверьте статус контейнеров.

